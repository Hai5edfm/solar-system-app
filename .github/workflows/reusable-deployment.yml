name: Deployment - Reusable workflow
on:
  workflow_call:
    secrets:
      k8s-kubeconfig:
        required: true
      mongodb-password:
        required: true

jobs:
  reuse-deploy:
    environment:
      name: Development
      url: https://${{ steps.set_ingress_url.outputs.URL }}
    runs-on: ubuntu-latest
    outputs:
      URL: ${{ steps.set_ingress_url.outputs.URL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'
      - name: Set Kube config
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.k8s-kubeconfig }}
      - name: Fetch kubernetes Cluster details
        run: |
          kubectl version
          echo -------------------
          kubectl get nodes
      - name: Save Nginx ingress controller IP as a GITHUB Environment variable
        run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services nginx-ingress-ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
      - name: Replace tokens in Manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}
      - name: Check files
        run: |
          cat kubernetes/development/*.yaml
      - name: Create mongoDB secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -
      - name: Deploy to Development Environment
        run: |
          kubectl apply -f kubernetes/development
      - name: Set App Ingress Host URL
        id: set_ingress_url
        run: |
          echo "URL=$(kubectl -n ${{ vars.NAMESPACE }} get ingress solar-system -o jsonpath='{.spec.rules[0].host}')" >> $GITHUB_OUTPUT